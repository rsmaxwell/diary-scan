#!/bin/bash

rootDir=${1}
if [ -z "${rootDir}" ]; then
    echo "Error: $0[${LINENO}]"
    echo "missing rootDir argument"
    exit 1
fi

if [ ! -d "${rootDir}" ]; then
    echo "Error: $0[${LINENO}]"
    echo "directory not found: \"${rootDir}\""
    exit 1
fi

diary=${2}
if [ -z "${diary}" ]; then
    echo "Error: $0[${LINENO}]"
    echo "missing diary argument"
    exit 1
fi

word=${3}
if [ -z "${word}" ]; then
    echo "Error: $0[${LINENO}]"
    echo "missing word argument"
    exit 1
fi

imageFile=${4}
if [ -z "${imageFile}" ]; then
    echo "Error: $0[${LINENO}]"
    echo "missing imageFile argument"
    exit 1
fi



REPOSITORYURL="https://server.rsmaxwell.co.uk/archiva/repository"
REPOSITORYID="releases"
REPOSITORY="releases"
GROUPID="com.rsmaxwell.diary"

ARTIFACTID="extractor"

# find the latest version of the extractor jar
stdout=$(./getLatestJar "${REPOSITORYURL}" "${REPOSITORYID}" "${REPOSITORY}" "${GROUPID}" "${ARTIFACTID}")
result=$?
if [ ${result} -eq 0 ]; then
    extractorJar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi

ARTIFACTID="diaryjson"

# find the latest version of the diaryjson jar
stdout=$(./getLatestJar "${REPOSITORYURL}" "${REPOSITORYID}" "${REPOSITORY}" "${GROUPID}" "${ARTIFACTID}")
result=$?
if [ ${result} -eq 0 ]; then
    diaryjsonJar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi

# get the ApacheCommonsCli Jar
stdout=$(./getJar "commons-cli" "commons-cli" "1.4")
result=$?
if [ ${result} -eq 0 ]; then
    apacheCommonsCliJar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi

# get the ApacheCommonsText Jar
stdout=$(./getJar "org.apache.commons" "commons-text" "1.8" )
result=$?
if [ ${result} -eq 0 ]; then
    apacheCommonsTextJar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi

# get the ApacheCommonsLang3 Jar
stdout=$(./getJar "org.apache.commons" "commons-lang3" "3.9" )
result=$?
if [ ${result} -eq 0 ]; then
    apacheCommonsLang3Jar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi

# get the JacksonDatabind Jar
stdout=$(./getJar "com.fasterxml.jackson.core" "jackson-databind" "2.10.2")
result=$?
if [ ${result} -eq 0 ]; then
    jacksonDataBindJar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi

# get the JacksonCore Jar
stdout=$(./getJar "com.fasterxml.jackson.core" "jackson-core" "2.10.2")
result=$?
if [ ${result} -eq 0 ]; then
    jacksonCoreJar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi

# get the JacksonAnnotations Jar
stdout=$(./getJar "com.fasterxml.jackson.core" "jackson-annotations" "2.10.2" )
result=$?
if [ ${result} -eq 0 ]; then
    jacksonAnnotationsJar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi

# get the slf4j-api Jar
stdout=$(./getJar "org.slf4j" "slf4j-api" "2.0.0-alpha1" )
result=$?
if [ ${result} -eq 0 ]; then
    slf4jApiJar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi

# get the slf4jSimpleJar Jar
stdout=$(./getJar "org.slf4j" "slf4j-simple" "2.0.0-alpha1" )
result=$?
if [ ${result} -eq 0 ]; then
    slf4jSimpleJar=${stdout}
else
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "${stdout}"
    exit 1
fi



# Extract html fragments from the word file

if [[ "$OSTYPE" == "cygwin" ]]; then
    SEP=";"
    rootDirJava=$(cygpath -w "${rootDir}")
else
    SEP=":"
    rootDirJava=${rootDir}
fi

classpath="${extractorJar}${SEP}${diaryjsonJar}"
classpath="${classpath}${SEP}${apacheCommonsCliJar}${SEP}${apacheCommonsTextJar}${SEP}${apacheCommonsLang3Jar}"
classpath="${classpath}${SEP}${jacksonDataBindJar}${SEP}${jacksonCoreJar}${SEP}${jacksonAnnotationsJar}"
classpath="${classpath}${SEP}${slf4jApiJar}${SEP}${slf4jSimpleJar}"

java -cp ${classpath} com.rsmaxwell.extractor.App --root "${rootDirJava}" --diary "${diary}" --word "${word}" --image "${imageFile}"
result=$?
if [ ! ${result} -eq 0 ]; then
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    echo "rootDir: ${rootDir}"
    echo "rootDirJava: ${rootDirJava}"
    echo "diary: ${diary}"
    echo "imageFile: ${imageFile}"
    exit 1
fi

cp -r output/fragments input
result=$?
if [ ! ${result} -eq 0 ]; then
    echo "Error: $0[${LINENO}]"
    echo "result: ${result}"
    exit 1
fi
